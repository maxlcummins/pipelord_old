import re
import subprocess
import os

configfile:
    "config/config.yaml"

#Get assemblies
sample_ids = config['assemblies']
output_pre = config['prefix']
gene_db = expand(config['gene_dbs'])
db_location = config['gene_db_location']
gene_dbs = expand(config['gene_dbs'])



#if os.path.isdir('data/databases/custom'):
#    print('Custom DBs already downloaded')
#
#else:       
#    subprocess.call("mkdir -p data/databases/custom", shell=True)
#    subprocess.call("wget https://raw.githubusercontent.com/CJREID/custom_DBs/master/EC_custom.fa -O data/databases/custom/EC_custom.fa", shell=True)
#    subprocess.call("wget https://raw.githubusercontent.com/CJREID/custom_DBs/master/E_coli_phylogroup.fa -O data/databases/custom/E_coli_phylogroup.fa", shell=True)
#    subprocess.call("wget https://raw.githubusercontent.com/CJREID/custom_DBs/master/srst2_EcOH.fa -O data/databases/custom/srst2_EcOH.fa", shell=True)
#
#
#custom_dbs, = glob_wildcards("data/databases/custom/{custom_db}.fa")

print(sample_ids)
print(db_location)
print(gene_dbs)


rule all:
	input:
		expand(config['outdir']+"{output_prefix}/{gene_db}/{sample}.tab", sample=sample_ids, gene_db=gene_dbs, output_prefix = output_pre)

rule snippy_run:
	output: 
		config['outdir']+"{output_prefix}/{gene_db}.tab"
	conda: 
		"config/abricate.yaml"
	params:
		db = "{gene_db}", gene_db=gene_dbs,
		datadir = config['gene_db_location'],
		ass_path = config['assemblies']
		#minid = config['minimum_id'],
		#mincov = config['minimum_cov']
	shell: 
		"abricate --nopath --datadir {params.datadir} --db {params.db} {params.ass_path}/* > {output}"

rule summarise:
	input:
		expand(config['outdir']+"{output_prefix}/{gene_db}.tab")
	output: 
		config['outdir']+"{output_prefix}/{gene_db}/{sample}.tab"
	conda: 
		"config/abricate.yaml"
	shell: 
		"abricate --summary {input} > {output}"





